{"ast":null,"code":"var _jsxFileName = \"/home/steven/GITHUB/thang-todo/src/component/taskItem/CheckBox.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React from 'react';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useGlobalContext } from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckBox = _ref => {\n  _s();\n  let {\n    task,\n    handleDeleteTask\n  } = _ref;\n  const {\n    toggleAddTodo\n  } = useGlobalContext();\n  const [checked, setChecked] = useState(task.completed);\n  const handleChange = async () => {\n    try {\n      await axios.put(`/api/tasks/${task._id}`, {\n        title: task.title,\n        completed: !checked\n      });\n      setChecked(!checked);\n    } catch (err) {\n      toast.error('cannot add task');\n    }\n  };\n  console.log(checked);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-item2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-checkbox\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"task-title2\",\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"task-completed\",\n      children: `${checked ? 'Completed' : 'Incompleted'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      class: \"bx bx-x-circle\",\n      onClick: () => handleDeleteTask(task._id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), checked ? '' : /*#__PURE__*/_jsxDEV(\"i\", {\n      class: \"bx bx-edit-alt\",\n      onClick: () => toggleAddTodo({\n        title: task.title,\n        id: task._id\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n_s(CheckBox, \"z0rMLGeM3h5Ws5vkXo2lAvpqEFY=\", false, function () {\n  return [useGlobalContext];\n});\n_c = CheckBox;\nexport default CheckBox;\nvar _c;\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"names":["axios","React","useState","toast","useGlobalContext","CheckBox","task","handleDeleteTask","toggleAddTodo","checked","setChecked","completed","handleChange","put","_id","title","err","error","console","log","id"],"sources":["/home/steven/GITHUB/thang-todo/src/component/taskItem/CheckBox.js"],"sourcesContent":["import axios from 'axios';\nimport React from 'react';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useGlobalContext } from '../../context/Context';\nconst CheckBox = ({ task, handleDeleteTask }) => {\n\tconst {toggleAddTodo} = useGlobalContext();\n\tconst [checked, setChecked] = useState(task.completed);\n\n\tconst handleChange = async () => {\n\t\ttry {\n\t\t\tawait axios.put(`/api/tasks/${task._id}`, {\n\t\t\t\ttitle:task.title,completed: !checked,\n\t\t\t});\n\t\t\tsetChecked(!checked);\n\t\t} catch (err) {\n\t\t\ttoast.error('cannot add task');\n\t\t}\n\t};\n\n\tconsole.log(checked);\n\treturn (\n\t\t<div className=\"task-item2\">\n\t\t\t<div className=\"task-checkbox\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tchecked={checked}\n\t\t\t\t\tonChange={handleChange}\n\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<p className=\"task-title2\">{task.title}</p>\n\t\t\t<p className=\"task-completed\">{`${\n\t\t\t\tchecked ? 'Completed' : 'Incompleted'\n\t\t\t}`}</p>\n\t\t\t<i\n\t\t\t\tclass=\"bx bx-x-circle\"\n\t\t\t\tonClick={() => handleDeleteTask(task._id)}\n\t\t\t></i>\n\t\t\t{checked ? (\n\t\t\t\t''\n\t\t\t) : (\n\t\t\t\t<i\n\t\t\t\t\tclass=\"bx bx-edit-alt\"\n\t\t\t\t\t\tonClick={() => toggleAddTodo({ title:task.title, id:task._id })}\n\t\t\t\t></i>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default CheckBox;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,gBAAgB,QAAQ,uBAAuB;AAAC;AACzD,MAAMC,QAAQ,GAAG,QAAgC;EAAA;EAAA,IAA/B;IAAEC,IAAI;IAAEC;EAAiB,CAAC;EAC3C,MAAM;IAACC;EAAa,CAAC,GAAGJ,gBAAgB,EAAE;EAC1C,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAACI,IAAI,CAACK,SAAS,CAAC;EAEtD,MAAMC,YAAY,GAAG,YAAY;IAChC,IAAI;MACH,MAAMZ,KAAK,CAACa,GAAG,CAAE,cAAaP,IAAI,CAACQ,GAAI,EAAC,EAAE;QACzCC,KAAK,EAACT,IAAI,CAACS,KAAK;QAACJ,SAAS,EAAE,CAACF;MAC9B,CAAC,CAAC;MACFC,UAAU,CAAC,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACbb,KAAK,CAACc,KAAK,CAAC,iBAAiB,CAAC;IAC/B;EACD,CAAC;EAEDC,OAAO,CAACC,GAAG,CAACV,OAAO,CAAC;EACpB,oBACC;IAAK,SAAS,EAAC,YAAY;IAAA,wBAC1B;MAAK,SAAS,EAAC,eAAe;MAAA,uBAC7B;QACC,IAAI,EAAC,UAAU;QACf,OAAO,EAAEA,OAAQ;QACjB,QAAQ,EAAEG;MAAa;QAAA;QAAA;QAAA;MAAA;IAEtB;MAAA;MAAA;MAAA;IAAA,QACG,eACN;MAAG,SAAS,EAAC,aAAa;MAAA,UAAEN,IAAI,CAACS;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eAC3C;MAAG,SAAS,EAAC,gBAAgB;MAAA,UAAG,GAC/BN,OAAO,GAAG,WAAW,GAAG,aACxB;IAAC;MAAA;MAAA;MAAA;IAAA,QAAK,eACP;MACC,KAAK,EAAC,gBAAgB;MACtB,OAAO,EAAE,MAAMF,gBAAgB,CAACD,IAAI,CAACQ,GAAG;IAAE;MAAA;MAAA;MAAA;IAAA,QACtC,EACJL,OAAO,GACP,EAAE,gBAEF;MACC,KAAK,EAAC,gBAAgB;MACrB,OAAO,EAAE,MAAMD,aAAa,CAAC;QAAEO,KAAK,EAACT,IAAI,CAACS,KAAK;QAAEK,EAAE,EAACd,IAAI,CAACQ;MAAI,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAElE;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAER,CAAC;AAAC,GA5CIT,QAAQ;EAAA,QACWD,gBAAgB;AAAA;AAAA,KADnCC,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/steven/GITHUB/todo-app/frontend/src/component/taskItem/TaskItem.js\";\nimport React, { useState } from 'react';\nimport './taskitem.css';\nimport CheckBox from './CheckBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = _ref => {\n  let {\n    props\n  } = _ref;\n  const {\n    tasks,\n    handleDeleteTask\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: tasks.map((_ref2, index) => {\n      let {\n        title,\n        _id,\n        completed\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(CheckBox, {\n          completed: completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"task-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"task-completed\",\n          children: `${completed ? 'Completed' : 'incompleted'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bx bx-x-circle\",\n          onClick: () => handleDeleteTask(_id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bx bx-edit-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","CheckBox","TaskItem","props","tasks","handleDeleteTask","map","index","title","_id","completed"],"sources":["/home/steven/GITHUB/todo-app/frontend/src/component/taskItem/TaskItem.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './taskitem.css'\nimport CheckBox from './CheckBox';\n\nconst TaskItem = ({ props }) => {\n\t\n  const {tasks,handleDeleteTask} = props\n\t\n\treturn (\n\t\t<div className=\"task-list\">\n\t\t\t{tasks.map(({ title, _id, completed }, index) => (\n\t\t\t\t<div className=\"task-item\">\n\t\t\t\t\t<CheckBox completed={completed} />\n\t\t\t\t\t<p className=\"task-title\">{title}</p>\n\t\t\t\t\t<p className=\"task-completed\">{`${\n\t\t\t\t\t\tcompleted ? 'Completed' : 'incompleted'\n\t\t\t\t\t}`}</p>\n\t\t\t\t\t<i\n\t\t\t\t\t\tclass=\"bx bx-x-circle\"\n\t\t\t\t\t\tonClick={() => handleDeleteTask(_id)}\n\t\t\t\t\t></i>\n\t\t\t\t\t<i class=\"bx bx-edit-alt\"></i>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\n\nexport default TaskItem"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,QAAQ,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAM,CAAC;EAEzB,MAAM;IAACC,KAAK;IAACC;EAAgB,CAAC,GAAGF,KAAK;EAEvC,oBACC;IAAK,SAAS,EAAC,WAAW;IAAA,UACxBC,KAAK,CAACE,GAAG,CAAC,QAA4BC,KAAK;MAAA,IAAhC;QAAEC,KAAK;QAAEC,GAAG;QAAEC;MAAU,CAAC;MAAA,oBACpC;QAAK,SAAS,EAAC,WAAW;QAAA,wBACzB,QAAC,QAAQ;UAAC,SAAS,EAAEA;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eAClC;UAAG,SAAS,EAAC,YAAY;UAAA,UAAEF;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,eACrC;UAAG,SAAS,EAAC,gBAAgB;UAAA,UAAG,GAC/BE,SAAS,GAAG,WAAW,GAAG,aAC1B;QAAC;UAAA;UAAA;UAAA;QAAA,QAAK,eACP;UACC,KAAK,EAAC,gBAAgB;UACtB,OAAO,EAAE,MAAML,gBAAgB,CAACI,GAAG;QAAE;UAAA;UAAA;UAAA;QAAA,QACjC,eACL;UAAG,KAAK,EAAC;QAAgB;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACzB;IAAA,CACN;EAAC;IAAA;IAAA;IAAA;EAAA,QACG;AAER,CAAC;AAAC,KAtBIP,QAAQ;AAyBd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}